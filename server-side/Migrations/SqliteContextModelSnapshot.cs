// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using server_side.Models;

#nullable disable

namespace server_side.Migrations
{
    [DbContext(typeof(SqliteContext))]
    partial class SqliteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.13");

            modelBuilder.Entity("server_side.Models.Section", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BottomDiameter")
                        .HasColumnType("REAL");

                    b.Property<string>("PartNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("TopDiameter")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("server_side.Models.SectionShell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("SectionId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ShellId")
                        .HasColumnType("INTEGER");

                    b.Property<long>("ShellPosition")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.HasIndex("ShellId");

                    b.ToTable("SectionShells");
                });

            modelBuilder.Entity("server_side.Models.Shell", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("BottomDiameter")
                        .HasColumnType("REAL");

                    b.Property<double>("Height")
                        .HasColumnType("REAL");

                    b.Property<double>("SteelDensity")
                        .HasColumnType("REAL");

                    b.Property<double>("Thickness")
                        .HasColumnType("REAL");

                    b.Property<double>("TopDiameter")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("Shells");
                });

            modelBuilder.Entity("server_side.Models.SectionShell", b =>
                {
                    b.HasOne("server_side.Models.Section", "Section")
                        .WithMany("SectionShells")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("server_side.Models.Shell", "Shell")
                        .WithMany("SectionShells")
                        .HasForeignKey("ShellId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");

                    b.Navigation("Shell");
                });

            modelBuilder.Entity("server_side.Models.Section", b =>
                {
                    b.Navigation("SectionShells");
                });

            modelBuilder.Entity("server_side.Models.Shell", b =>
                {
                    b.Navigation("SectionShells");
                });
#pragma warning restore 612, 618
        }
    }
}
